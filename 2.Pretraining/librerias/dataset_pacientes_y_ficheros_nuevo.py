def get_dataset(year=None):
    # Pacientes y sus ficheros correspondientes

    # AÑO 2018
    # Paciente 559, 2018
    P1 = ["167", "168", "169", "170", "171", "175", "182", "183", "184", "187", "188", "189", "190",
          "193", "194", "195", "196", "200", "202", "203", "207"]  # Paciente 559 training
    P2 = ["208", "209", "211", "214"]  # Paciente 559 testing
    # # Paciente 563, 2018
    # P3 = ["219","220","221","222","224","225","226","227","228","229","231","232","235","239","240","241","246","248","251","253","254","255","258","260","261","262","263"] #Paciente 563 training sin hr
    P3 = ["225", "226", "227", "228", "229", "231", "232", "235", "239", "241", "246", "248", "251",
          "253", "254", "255", "258", "261", "262", "263"]  # Paciente 563 training con hr
    P4 = ["265", "266", "269", "270", "271"]  # Paciente 563 testing con hr
    # P4 = ["265", "266", "268", "269", "270", "271"]  # Paciente 563 testing sin hr
    # # Paciente 570, 2018
    P5 = ["332", "333", "334", "335", "336", "338", "339", "340", "344", "345", "346",
          "349", "351", "352", "354", "355", "356", "357", "358", "360", "361", "365", "366",
          "367", "371"]  # Paciente 570 training
    P6 = ["373", "375", "377", "381"]  # Paciente 570 testing con hr
    # P6 = ["372", "373", "374", "375", "377", "379", "380", "381"]  # Paciente 570 testing sin hr
    # # Paciente 575, 2018
    # P7 = ["383","384","385","388","389","390","392","393","394","395","396","397","399","400","401","402","403","405","406","407","408","409","411","412","413","414","416","417","418","419","420","422","423","424","425","426","427"] #Paciente 575 training sin hr
    P7 = ["383", "384", "385", "388", "389", "390", "392", "393", "395", "396", "397", "399", "400", "401",
          "402", "403", "405", "406", "407", "408", "409", "411", "412", "413", "414", "416", "418", "420", "423",
          "424", "425", "426"]  # Paciente 575 training con hr
    P8 = ["428", "429", "430", "431", "432", "435", "436"]  # Paciente 575 testing
    # # Paciente 588, 2018
    P9 = ["496", "497", "498", "499", "500", "502", "503", "504", "505", "506", "508", "509", "510", "511",
          "512", "514", "515", "516", "519", "520", "521", "522", "523", "525", "526", "527", "528",
          "529", "531", "532", "533", "534", "535", "537", "538", "539", "540"]  # Paciente 588 training
    P10 = ["541", "543", "544", "545", "546", "547"]  # Paciente 588 testing con hr
    # P10 = ["541","542","543","544","545","546","547","548","550"] #Paciente 588 testing sin hr
    # Paciente 591, 2018
    # P11 = ["552","553","554","555","556","557","558","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","581","582","587","588","589","590","592","593","594","595"] #Paciente 591 training sin hr
    P11 = ["552", "553", "554", "555", "556", "558", "560", "561", "563", "564", "566", "567", "568",
           "569", "572", "573", "574", "575", "581", "587", "588", "589", "590", "592", "594",
           "595"]  # Paciente 591 training con hr
    P12 = ["596", "598", "599", "600", "601", "603"]  # Paciente 591 testing con hr
    # P12 = ["596", "597", "598", "599", "600", "601", "602", "603", "604"]  # Paciente 591 testing sin hr

    # # AÑO 2020
    # # Paciente 540, 2020
    P13 = ["002", "003", "004", "005", "006", "008", "009", "010", "011", "012", "015", "016", "017", "018", "019",
           "021", "022", "023", "024", "025", "027", "028", "029", "030", "031", "034", "035", "036", "038",
           "041", "042", "044"]  # Paciente 540 training
    # P14 = ["047", "048", "049", "050", "051", "053", "054", "055", "056"]  # Paciente 540 testing
    P14 = ["047", "048", "049", "050", "051", "052", "053", "054", "055", "056"]
    # # Paciente 544, 2020
    P15 = ["059", "059", "060", "061", "062", "065", "066", "067", "068", "069",
           "073", "074", "075", "081", "086", "087", "089", "090", "091", "092", "095",
           "096", "097", "099", "101"]  # Paciente 544 training![](dataset/2020/fig/glucosa/Paciente 544-fichero 88.png)
    # P16 = ["102", "104", "107", "108", "109", "110", "111"]  # Paciente 544 testing
    P16 = ["102", "103", "104", "105", "106", "107", "108", "109", "110", "111"]  # Paciente 544 testing
    # # Paciente 552, 2020
    P17 = ["114", "115", "117", "119", "120", "123", "124", "129", "130",
           "132", "133", "137", "139", "140", "141",
           "144", "145", "146", "147", "148"]  # Paciente 552 training
    # P18 = ["154", "155", "156", "162"]  # Paciente 552 testing
    P18 = ["152", "153", "154", "155", "156", "157", "158", "159", "160", "161", "162", "163", "164",
           "165"]  # Paciente 552 testing
    # # Paciente 567, 2020
    P19 = ["277", "281", "282", "284", "285", "288", "289", "290",
           "296", "301", "303", "308", "316", "319"]  # Paciente 567 training
    # P20 = ["322", "323", "328", "330"]  # Paciente 567 testing
    P20 = ["321", "322", "323", "324", "325", "326", "327", "328", "329", "330"]  # Paciente 567 testing
    # # Paciente 584, 2020
    P21 = ["439", "440", "441", "442", "443", "445", "447", "448", "449", "450", "451", "452", "454", "455",
           "456", "457", "458", "460", "461", "462", "463", "464", "466", "467", "468", "469", "471", "473",
           "474", "475", "476", "477", "478", "480", "483"]  # Paciente 584 training
    # P22 = ["484", "485", "486", "487", "488", "491", "492", "493"]  # Paciente 584 testing
    P22 = ["484", "485", "486", "487", "488", "489", "490", "491", "492", "493", "494"]  # Paciente 584 testing
    # # Paciente 596, 2020
    P23 = ["607", "611", "612", "613", "614", "619", "620",
           "621", "623", "625", "626", "627", "628", "631", "632", "633", "634", "635",
           "638", "639", "640", "641", "642", "645", "646", "647", "648",
           "653", "655"]  # Paciente 596 training
    # P24 = ["657", "659", "660", "661", "663", "664"]  # Paciente 596 testing
    P24 = ["656", "657", "658", "659", "660", "661", "662", "663", "664", "665"]  # Paciente 596 testing
    # # Paciente 1 de OpenAPS
    P25 = ['670', '671', '674', '675', '676', '677', '678', '679', '680', '681',
           '683', '684', '685', '722', '723', '724', '725', '726',
           '728', '729', '730', '731', '734', '737',
           '742', '743', '744', '745', '750', '751', '752', '753', '754', '755', '756',
           '757', '760', '761', '762', '763', '765', '766', '769', '770', '771',
           '772', '774', '775', '776', '777', '779', '780', '781', '783', '784', '786',
           '787', '788', '789', '790', '792', '793', '794', '795', '797', '801',
           '802', '805', '806', '809', '811', '815', '816',
           '817', '819', '820', '821', '823', '826', '827', '829', '830',
           '833', '834', '835', '836', '839', '841', '844', '845', '846',
           '847', '849', '851', '852', '853', '854', '855', '858', '859',
           '862', '863', '869', '870', '872', '873', '874', '875', '876',
           '885', '887', '893', '894', '895', '897', '899', '902', '905', '906', '909']
    P26 = ['911', '912', '913', '914', '915', '916', '918', '919', '920', '921',
           '923', '924', '925', '926', '927', '928', '929', '930', '931', '932', '933', '936',
           '937', '939', '940', '941', '942', '943', '944', '946', '947', '948', '949', '951',
           '952', '953', '954', '955', '956', '957']
    # # Paciente 2 de OpenAPS
    P27 = ['958', '960', '961', '962', '963', '969', '970', '971', '973', '974', '975', '976', '978', '979', '980',
           '981', '982', '983', '984', '985', '986', '988', '989', '990', '991', '992', '993', '994', '995', '996',
           '997', '998', '999', '1000', '1001', '1002', '1003', '1004', '1005', '1006', '1007', '1008', '1009', '1010',
           '1011', '1012', '1013', '1014', '1015', '1016', '1017', '1018', '1019', '1020', '1021', '1023', '1024',
           '1025', '1026', '1027', '1028', '1029', '1030', '1031', '1032', '1034', '1035', '1036', '1038', '1039',
           '1040', '1041', '1042', '1044', '1045', '1046', '1047', '1048', '1049', '1051', '1052', '1053', '1054',
           '1055', '1056', '1057', '1059', '1060', '1062', '1063', '1064', '1065', '1066', '1067', '1068', '1069',
           '1070', '1071', '1072', '1073', '1074', '1075', '1076', '1077', '1078', '1079', '1081']
    P28 = ['1084', '1085', '1086', '1087', '1088', '1089', '1090', '1091', '1092', '1093', '1094', '1095', '1096',
           '1097', '1101', '1102', '1103', '1104', '1105', '1106', '1107', '1108', '1109', '1110', '1111', '1112',
           '1113', '1114']
    # # Paciente 3 de OpenAPS
    P29 = ['1171', '1172', '1173', '1174', '1175', '1176', '1177', '1178', '1179', '1180', '1181', '1182', '1183',
           '1184', '1185', '1186', '1187', '1188', '1189', '1190', '1191', '1192', '1193', '1194', '1195', '1196',
           '1197', '1198', '1199', '1200', '1201', '1202', '1203', '1204', '1205', '1206', '1207', '1208', '1209',
           '1210', '1211', '1212', '1213', '1214', '1215', '1216', '1217', '1218', '1219', '1220', '1221', '1222',
           '1223', '1224', '1225', '1226', '1227', '1228', '1229', '1230', '1231', '1232', '1233', '1234', '1235',
           '1236', '1237', '1238', '1239', '1240', '1241', '1242', '1243', '1244', '1245', '1246', '1247', '1248',
           '1249', '1250', '1251', '1252', '1253', '1254', '1255', '1256', '1257', '1258', '1259', '1260', '1261',
           '1262', '1263', '1264', '1265', '1266', '1267', '1268', '1269', '1270', '1271', '1272', '1273', '1274',
           '1275', '1276', '1277', '1278', '1279', '1280', '1281', '1282', '1283', '1284', '1285', '1286', '1287',
           '1288', '1289', '1290', '1291', '1292', '1293', '1294', '1295', '1296', '1297', '1298', '1299', '1300',
           '1301', '1302', '1303', '1304', '1305', '1306', '1307']
    P30 = ['1308', '1309', '1310', '1311', '1312', '1313', '1314', '1315', '1316', '1317', '1318', '1319', '1320',
           '1321', '1322', '1323', '1324', '1325', '1326', '1327', '1328', '1329', '1330', '1331', '1332', '1333',
           '1334', '1335', '1336', '1337', '1338', '1339', '1340', '1341', '1342', '1343', '1344', '1345', '1346',
           '1347', '1348', '1349', '1350', '1351', '1352', '1353', '1354', '1355', '1356']

    if year == 2020:
        train_data = P13 + P15 + P17 + P19 + P21 + P23  # dataset of training (impares)
        #   train_data = P1  # dataset of training
        eval_data = P2 + P4 + P6 + P8 + P10 + P12  # dataset of evaluation (pares, excepto P2 que dejo para test)
        #   eval_data = P2  # dataset of evaluation
        test_data = P14 + P16 + P18 + P20 + P22 + P24  # dataset of testing (to prevent overfitting)
        all_dataset = train_data + test_data
    elif year == 2018:
        train_data = P1 + P3 + P5 + P7 + P9 + P11  # dataset of training (impares)
        #   train_data = P1  # dataset of training
        eval_data = P1  # dataset of evaluation (pares, excepto P2 que dejo para test)
        #   eval_data = P2  # dataset of evaluation
        test_data = P2 + P4 + P6 + P8 + P10 + P12  # dataset of testing (to prevent overfitting)
        all_dataset = train_data + test_data
    elif year == 201820:
        train_data = P1 + P3 + P5 + P7 + P9 + P11 + P13 + P15 + P17 + P19 + P21 + P23 # dataset of training (impares)
        #   train_data = P1  # dataset of training
        eval_data = P1  # dataset of evaluation (pares, excepto P2 que dejo para test)
        #   eval_data = P2  # dataset of evaluation
        test_data = P2 + P4 + P6 + P8 + P10 + P12 + P14 + P16 + P18 + P20 + P22 + P24 # dataset of testing (to prevent overfitting)
        all_dataset = train_data + test_data
    elif year == 0:  # all dataset without 2018 data
        train_data = P13 + P15 + P17 + P19 + P21 + P23 + P25 + P27 + P29  # dataset of training
        eval_data = P4 + P8 + P12 + P16 + P18 + P20 + P22 + P24  # dataset of evaluation
        test_data = P14 + P16 + P18 + P20 + P22 + P24 + P26 + P28 + P30  # dataset of testing (to prevent overfitting)
        all_dataset = train_data + test_data
    elif year == 1:
        train_data = P25  # dataset of training
        eval_data = P4 + P8 + P12  # dataset of evaluation
        test_data = P26  # dataset of testing (to prevent overfitting)
        all_dataset = train_data + test_data
        return all_dataset, train_data, eval_data, test_data
    elif year == 2:
        train_data = P27  # dataset of training
        eval_data = P4 + P8 + P12  # dataset of evaluation
        test_data = P28  # dataset of testing (to prevent overfitting)
        all_dataset = train_data + test_data
        return all_dataset, train_data, eval_data, test_data
    elif year == 3:
        train_data = P29  # dataset of training
        eval_data = P4 + P8 + P12  # dataset of evaluation
        test_data = P30  # dataset of testing (to prevent overfitting)
        all_dataset = train_data + test_data
        return all_dataset, train_data, eval_data, test_data
    else:
        train_data = P1 + P3 + P5 + P7 + P9 + P11 + P13 + P15 + P17 + P19 + P21 + P23 + P25 + P27 + P29  # dataset of training
        eval_data = P4 + P8 + P12 + P16 + P18 + P20 + P22 + P24  # dataset of evaluation
        test_data = P2 + P6 + P10 + P4 + P8 + P12 + P14 + P16 + P18 + P20 + P22 + P24 + P26 + P28 + P30  # dataset of testing (to prevent overfitting)
        all_dataset = train_data + test_data

    return all_dataset, train_data, eval_data, test_data


def main():
    #    all_dataset,train_data, eval_data,test_data=dataset_pacientes_ficheros()
    all_dataset, train_data, eval_data, test_data = get_dataset()
    print('El conjunto de entrenamiento es:')
    print(len(train_data))
    print('El conjunto de evaluacion es:')
    print(eval_data)
    print('El conjunto de test es:')
    print(len(test_data))


#    print(all_dataset)

if __name__ == '__main__':
    main()
